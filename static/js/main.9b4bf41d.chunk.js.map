{"version":3,"sources":["Categories.js","App.js","reportWebVitals.js","index.js"],"names":["Categories","props","refreshJokes","axios","get","state","category","then","res","setState","jokesList","data","catch","err","console","log","handleChange","e","target","name","value","this","className","id","type","defaultChecked","onChange","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0TAqFeA,E,kDA/Eb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAWRC,aAAe,WACbC,IACGC,IADH,2DAC2D,EAAKC,MAAMC,WACnEC,MAAK,SAAAC,GAAG,OAAG,EAAKC,SAAS,CAACC,UAAUF,EAAIG,UACxCC,OAAM,SAAAC,GAAG,OAAEC,QAAQC,IAAIF,OAhBT,EAmBnBG,aAAe,SAAAC,GACb,MAAwBA,EAAEC,OAAlBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MACd,EAAKX,SAAL,eACGU,EAAOC,IAEV,WAEE,EAAKlB,mBAxBP,EAAKG,MAAQ,CACXK,UAAW,GACXJ,SAAS,UAJM,E,qDAQnB,WACEe,KAAKnB,iB,oBAsBP,WACE,OACE,sBAAKoB,UAAY,aAAjB,UACE,8DAGA,sBAAKA,UAAU,cAAf,UACE,4CAEF,qBAAKA,UAAU,MAAf,SACE,+BACE,+BACE,uBAAOC,GAAG,SAAQH,MAAM,SAASD,KAAK,WAAWK,KAAK,QAAQC,gBAAc,EAACC,SAAUL,KAAKL,eAC5F,sBAAMM,UAAU,OAAhB,uBAEF,+BACE,uBAAOC,GAAG,SAAQH,MAAM,SAASD,KAAK,WAAWK,KAAK,QAAQE,SAAUL,KAAKL,eAC7E,sBAAMM,UAAU,OAAhB,uBAEF,+BACE,uBAAOC,GAAG,YAAWH,MAAM,YAAYD,KAAK,WAAWK,KAAK,QAAQE,SAAUL,KAAKL,eACnF,sBAAMM,UAAU,OAAhB,0BAEF,+BACE,uBAAOC,GAAG,MAAKH,MAAM,MAAMD,KAAK,WAAWK,KAAK,QAAQE,SAAUL,KAAKL,eACvE,sBAAMM,UAAU,OAAhB,oBAEF,+BACE,uBAAOC,GAAG,UAASH,MAAM,UAAUD,KAAK,WAAWK,KAAK,QAAQE,SAAUL,KAAKL,eAC/E,sBAAMM,UAAU,OAAhB,wBAEF,+BACE,uBAAOC,GAAG,QAAOH,MAAM,QAAQD,KAAK,WAAWK,KAAK,QAAQE,SAAUL,KAAKL,eAC3E,sBAAMM,UAAU,OAAhB,8BAMN,sBAAKA,UAAU,OAAf,UACE,yDAA4BD,KAAKhB,MAAMC,SAAvC,8BACA,4BAAIe,KAAKhB,MAAMK,UAAUU,kB,GAzEVO,aCOVC,MATf,WAEE,OACE,qBAAKN,UAAU,MAAf,SACE,cAAC,EAAD,OCKSO,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBxB,MAAK,YAAkD,IAA/CyB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.9b4bf41d.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport './Categories.css';\r\nimport axios from 'axios';\r\n\r\n\r\nclass Categories extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      jokesList: [],\r\n      category:\"animal\",\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.refreshJokes();\r\n  }\r\n\r\n  refreshJokes = () => {\r\n    axios\r\n      .get(`https://api.chucknorris.io/jokes/random?category=${this.state.category}`)\r\n      .then(res=> this.setState({jokesList:res.data}))\r\n      .catch(err=>console.log(err))\r\n  };\r\n\r\n  handleChange = e => {\r\n    const { name, value } = e.target;\r\n    this.setState({\r\n      [name]: value\r\n    }, \r\n    ()=> {\r\n      // console.log(this.state.category)\r\n      this.refreshJokes()\r\n    });\r\n  };\r\n  \r\n\r\n  render() {    \r\n    return (\r\n      <div className = \"categories\">\r\n        <h1>\r\n          Chuck Norris API Application\r\n        </h1>\r\n        <div className=\"leftsidebar\">\r\n          <h3>Categories</h3>\r\n          \r\n        <div className=\"nav\">\r\n          <ul> \r\n            <li> \r\n              <input id=\"animal\"value=\"animal\" name=\"category\" type=\"radio\" defaultChecked onChange={this.handleChange}/>\r\n              <span className=\"text\">Animal</span>\r\n            </li> \r\n            <li> \r\n              <input id=\"career\"value=\"career\" name=\"category\" type=\"radio\" onChange={this.handleChange}/>\r\n              <span className=\"text\">Career</span>\r\n            </li> \r\n            <li> \r\n              <input id=\"celebrity\"value=\"celebrity\" name=\"category\" type=\"radio\" onChange={this.handleChange}/>\r\n              <span className=\"text\">Celebrity</span>\r\n            </li> \r\n            <li> \r\n              <input id=\"dev\"value=\"dev\" name=\"category\" type=\"radio\" onChange={this.handleChange}/>\r\n              <span className=\"text\">Dev</span>\r\n            </li>     \r\n            <li> \r\n              <input id=\"science\"value=\"science\" name=\"category\" type=\"radio\" onChange={this.handleChange}/>\r\n              <span className=\"text\">Science</span>\r\n            </li>\r\n            <li> \r\n              <input id=\"music\"value=\"music\" name=\"category\" type=\"radio\" onChange={this.handleChange}/>\r\n              <span className=\"text\">Music</span>\r\n            </li>\r\n                      \r\n          </ul>\r\n        </div>\r\n        </div>\r\n        <div className=\"main\">   \r\n          <h4>Chuck Norris joke from {this.state.category} category is as follows:</h4>         \r\n          <p>{this.state.jokesList.value}</p>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Categories\r\n\r\n","import './App.css';\nimport Categories from './Categories';\n\nfunction App() {\n\n  return (\n    <div className=\"App\">      \n      <Categories />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}